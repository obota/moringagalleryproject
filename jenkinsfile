pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Check out the source code from the repository
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                // Use NodeJS plugin to set up Node.js environment
                nodejs(nodeJSInstallationName: 'YOUR_NODEJS_INSTALLATION_NAME') {
                    sh 'npm install' // Install project dependencies
                }
            }
        }

        stage('Run Tests') {
            steps {
                // Run tests using npm
                nodejs(nodeJSInstallationName: 'YOUR_NODEJS_INSTALLATION_NAME') {
                    sh 'npm test'
                }
            }
        }

        stage('Deploy to Heroku') {
            steps {
                // Start the server on Heroku
                sh 'node server.js' 
            }
        }
    }

    post {
        always {
            junit '**/test-results/*.xml'
            emailext (
                subject: "Test Results - ${currentBuild.fullDisplayName}",
                body: "${DEFAULT_CONTENT}",
                recipientProviders: [developers()],
                replyTo: "dennisobota@gmail.com",
                attachLog: true,
                compressLog: true,
                attachmentsPattern: '**/test-results/*.xml'
            )
        }
        failure {
            mail (
                to: 'dennisobota@gmail.com',
                subject: "Pipeline Failed - ${currentBuild.fullDisplayName}",
                body: "The pipeline has failed. Please check the Jenkins console output for details."
            )
        }
    }
}
